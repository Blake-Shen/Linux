1、"
双引号用于保持引号内所有字符的字面值（回车也不例外），但以下情况除外：
-$加变量名可以取变量的值
-反引号仍表示命令替换
----\$表示$的字面值
----\`表示`的字面值
----\"表示"的字面值
----\\表示\的字面值
除以上情况之外，在其它字符前面的\无特殊含义，只表示字面值。
2、'
单引号用于保持引号内所有字符的字面值，即使引号内的\和回车也不例外，但是字符串中不能出现单引号。
当shell碰到第一个单引号时，它忽略掉其后直到第二个单引号的所有特殊字符。
3、\
反斜杠一般用作转义字符,或称逃脱字符,linux如果echo要让转义字符发生作用,就要使用-e选项,且转义字符要使用双引号。
4、$
变量替换。正则表达式中的行结束符。
5、`
命令替换是指shell能够将一个命令的标准输出插在一个命令行中任何位置。shell中有两种方法作命令替换：把shell命令用反引号或者$(...)结构括起来，其中，$(...)格式受到POSIX标准支持，也利于嵌套。
反引号和$()的功能是命令替换，将反引号或$()中的字符串做为命令来执行，我们在用shell编程时经常用的到　将系统命令的执行结果赋给一个变量。
但反引号内不能再引用反引号，而$()中可以引用反引号。

$()和``表示命令行替换
$(())用来做整数运算
${}表示变量替换

${变量名#匹配规则}	从变量开头进行规则匹配，将符合最短的数据删除
${变量名##匹配规则}	从变量开头进行规则匹配，将符合最长的数据删除
${变量名%匹配规则}	从变量尾部进行规则匹配，将符合最短的数据删除
${变量名%%匹配规则}	从变量尾部进行规则匹配，将符合最长的数据删除
${变量名/旧字符串/新字符串}	变量内容符合旧字串规则，则第一个旧字符串会被新字符串取代
${变量名//旧字符串/新字符串}	变量内容符合旧字串规则，则全部的旧字符串会被新字符串取代
